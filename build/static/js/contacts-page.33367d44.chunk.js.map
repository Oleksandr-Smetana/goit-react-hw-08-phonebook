{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Loader/Loader.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js","pages/ContactsPage/ContactsPage.module.css"],"names":["module","exports","App","type","color","height","width","style","position","top","left","transform","Component","getAllItems","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","name","includes","ContactForm","useState","setName","number","setNumber","allContacts","useSelector","isLoading","dispatch","useDispatch","handleChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","find","contact","toast","warn","addContact","success","label","input","pattern","title","onChange","required","submitButton","ContactList","useEffect","fetchContacts","length","contactList","map","id","contactItem","contactInfo","deleteButton","onClick","deleteContact","notification","Filter","changeFilter","Phonebook","phonebook","autoClose","theme"],"mappings":"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","file":"static/js/contacts-page.33367d44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1CLtc\",\"label\":\"ContactForm_label__rfloG\",\"input\":\"ContactForm_input__3Ms3S\",\"submitButton\":\"ContactForm_submitButton__2E8la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__HkvO3\",\"contactItem\":\"ContactList_contactItem__3xmnW\",\"contactInfo\":\"ContactList_contactInfo__3pGyM\",\"deleteButton\":\"ContactList_deleteButton__1bFhZ\",\"notification\":\"ContactList_notification__Bn3U8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3m1Gi\",\"label\":\"Filter_label__2QEQi\",\"input\":\"Filter_input__2mjTR\"};","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Rings\"\n        color=\"#ff6400\"\n        height={80}\n        width={80}\n        style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    );\n  }\n}\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getAllItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim(' ');\r\n\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from '../Loader';\n\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport {\n  getAllItems,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const allContacts = useSelector(getAllItems);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  // запись имени и номера телефона в стейт\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // добавлено для dispatch\n  const onSubmit = (name, number) => {\n    const duplicateContact = allContacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (duplicateContact) {\n      toast.warn(`${name} is already exist!`);\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n      toast.success(\n        `${name} successfully added to Phonebook!`,\n      );\n    }\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button\n        className={s.submitButton}\n        type=\"submit\"\n        // disabled={isLoading}\n      >\n        Add contact\n      </button>\n\n      {isLoading && <Loader />}\n    </form>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Loader from '../Loader';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getVisibleContacts,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getLoading);\n  const contacts = useSelector(getVisibleContacts);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  // const onDelete = contactId =>\n  //   dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      {contacts.length !== 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={s.contactItem} key={id}>\n              <p className={s.contactInfo}>\n                {name}: {number}\n              </p>\n              <button\n                className={s.deleteButton}\n                id={id}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.notification}>\n          There are no contacts...\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Loader from '../Loader';\n\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const value = useSelector(getFilter);\n  const onChange = e =>\n    dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n","import s from './ContactsPage.module.css';\r\n\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactList from '../../components/ContactList';\r\nimport Filter from '../../components/Filter';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nexport default function Phonebook() {\r\n  return (\r\n    <div className={s.phonebook}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      <ToastContainer\r\n        autoClose={3000}\r\n        position=\"top-center\"\r\n        theme=\"colored\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactsPage_phonebook__2s9jy\",\"title\":\"ContactsPage_title__23vO9\"};"],"sourceRoot":""}