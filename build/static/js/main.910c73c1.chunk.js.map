{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/auth/auth-operations.js","redux/auth/auth-reducers.js","redux/store.js","redux/auth/auth-selectors.js","components/AppBar/AppBar.js","pages/HomePage/HomePage.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","components/Loader/Loader.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/AppBar/AppBar.module.css","pages/ContactsPage/ContactsPage.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","then","data","addContact","contact","post","deleteContact","contactId","delete","items","createReducer","fulfilled","payload","state","filter","id","loading","pending","rejected","combineReducers","token","headers","common","Authorization","register","registrationData","logIn","loginData","logOut","fetchCurrentUser","ThunkAPI","persistedToken","getState","auth","console","log","initialUserState","name","email","userReducer","user","tokenReducer","isLoggedIn","isCurrentUser","tokenPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducers","persistReducer","authReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getStatus","AppBar","useSelector","exact","to","className","s","link","HomePage","RegisterPage","dispatch","useDispatch","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","autoComplete","type","onChange","LoginPage","App","color","height","width","style","position","top","left","transform","Component","getAllItems","getFilter","getLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","ContactForm","number","setNumber","allContacts","isLoading","currentTarget","form","find","toast","warn","success","label","input","pattern","title","required","submitButton","ContactList","useEffect","length","contactList","map","contactItem","contactInfo","deleteButton","onClick","notification","Filter","Phonebook","app","autoClose","theme","path","element","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.910c73c1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction(\r\n  'contacts/fetchContactsError',\r\n);\r\nexport const addContactRequest = createAction(\r\n  'contacts/addContactRequest',\r\n);\r\nexport const addContactSuccess = createAction(\r\n  'contacts/addContactSuccess',\r\n);\r\nexport const addContactError = createAction(\r\n  'contacts/addContactError',\r\n);\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction(\r\n  'contacts/deleteContactError',\r\n);\r\n\r\nexport const changeFilter = createAction(\r\n  'contacts/changeFilter',\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'https://connections-api.herokuapp.com';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      return await axios\r\n        .get('/contacts')\r\n        .then(({ data }) => data);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      return await axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => data);\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${contactId}`);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\n// ========== before using createAsyncThunk ==========\r\n// export const fetchContacts = () => dispatch => {\r\n//   dispatch(fetchContactsRequest());\r\n//   axios\r\n//     .get('/contacts')\r\n//     .then(({ data }) =>\r\n//       dispatch(fetchContactsSuccess(data)),\r\n//     )\r\n//     .catch(error => dispatch(fetchContactsError(error)));\r\n// };\r\n\r\n// export const addContact = (name, number) => dispatch => {\r\n//   const contacts = { name, number };\r\n//   dispatch(addContactRequest());\r\n//   axios\r\n//     .post('/contacts', contacts)\r\n//     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch(error => dispatch(addContactError(error)));\r\n// };\r\n\r\n// export const deleteContact = contactId => dispatch => {\r\n//   dispatch(deleteContactRequest(contactId));\r\n\r\n//   axios\r\n//     .delete(`/contacts/${contactId}`)\r\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\r\n//     .catch(error => dispatch(deleteContactError(error)));\r\n// };\r\n","import {\r\n  createReducer,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport { changeFilter } from './contacts-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [deleteContact.fulfilled]: (state, { payload }) => {\r\n    return state.filter(contact => contact.id !== payload);\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (registrationData, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        '/users/signup',\r\n        registrationData,\r\n      );\r\n      token.set(data.token);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (loginData, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        '/users/login',\r\n        loginData,\r\n      );\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, ThunkAPI) => {\r\n    const persistedToken = ThunkAPI.getState().auth.token;\r\n    console.log(ThunkAPI);\r\n\r\n    if (persistedToken === null) {\r\n      return ThunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return ThunkAPI.rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import {\r\n  createReducer,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n} from './auth-operations';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst userReducer = createReducer(initialUserState, {\r\n  [register.fulfilled]: (_, { payload }) => payload.user,\r\n  [logIn.fulfilled]: (_, { payload }) => payload.user,\r\n  [logOut.fulfilled]: () => initialUserState,\r\n  [fetchCurrentUser.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [register.fulfilled]: (_, { payload }) => payload.token,\r\n  [logIn.fulfilled]: (_, { payload }) => payload.token,\r\n  [logOut.fulfilled]: () => null,\r\n});\r\n\r\nconst isLoggedIn = createReducer(false, {\r\n  [register.pending]: () => false,\r\n  [register.fulfilled]: () => true,\r\n  [register.rejected]: () => false,\r\n\r\n  [logIn.pending]: () => false,\r\n  [logIn.fulfilled]: () => true,\r\n  [logIn.rejected]: () => false,\r\n\r\n  [logOut.pending]: () => true,\r\n  [logOut.fulfilled]: () => false,\r\n  [logOut.rejected]: () => true,\r\n\r\n  [fetchCurrentUser.pending]: () => false,\r\n  [fetchCurrentUser.fulfilled]: () => true,\r\n  [fetchCurrentUser.rejected]: () => false,\r\n});\r\n\r\nconst isCurrentUser = createReducer(false, {\r\n  [fetchCurrentUser.pending]: () => true,\r\n  [fetchCurrentUser.fulfilled]: () => false,\r\n  [fetchCurrentUser.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  isLoggedIn,\r\n  isCurrentUser,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducers from './contacts/contacts-reducers';\r\nimport authReducers from './auth/auth-reducers';\r\n\r\nconst getMiddleware = getDefaultMiddleware =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [\r\n            FLUSH,\r\n            REHYDRATE,\r\n            PAUSE,\r\n            PERSIST,\r\n            PURGE,\r\n            REGISTER,\r\n          ],\r\n        },\r\n      }).concat(logger)\r\n    : getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [\r\n            FLUSH,\r\n            REHYDRATE,\r\n            PAUSE,\r\n            PERSIST,\r\n            PURGE,\r\n            REGISTER,\r\n          ],\r\n        },\r\n      });\r\n\r\nconst tokenPersistConfig = {\r\n  key: 'user-token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n    auth: persistReducer(tokenPersistConfig, authReducers),\r\n  },\r\n  middleware: getMiddleware,\r\n  devTools: process.env.NODE_ENV === 'development', // devTools применяются тлько в разработке\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getToken = state => state.auth.token;\r\nexport const getStatus = state => state.auth.isLoggedIn;\r\nexport const getCurrentUser = state =>\r\n  state.auth.isCurrentUser;\r\n","import { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getStatus } from '../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n// import AuthNav from '../AuthNav/AuthNav';\r\n// import UserMenu from '../UserMenu/UserMenu';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getStatus);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <NavLink exact=\"true\" to=\"/\" className={s.link}>\r\n          Home\r\n        </NavLink>\r\n\r\n        {isLoggedIn && (\r\n          <NavLink to=\"contacts\" className={s.link}>\r\n            Contacts\r\n          </NavLink>\r\n        )}\r\n\r\n        <NavLink to=\"/register\" className={s.link}>\r\n          Register\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/login\" className={s.link}>\r\n          Login\r\n        </NavLink>\r\n\r\n        {/* {isLoggedIn ? <UserMenu /> : <AuthMenu />} */}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","export default function HomePage() {\r\n  return <h1>Home Page!</h1>;\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { register } from '../../redux/auth/auth-operations';\r\n\r\nexport default function RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Registration Form</h1>\r\n\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label>\r\n          Name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          E-mail\r\n          <br />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Password\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Register Now</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/auth/auth-operations';\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please Login</h1>\r\n\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label>\r\n          E-mail\r\n          <br />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Password\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Rings\"\n        color=\"#3f51b5\"\n        height={80}\n        width={80}\n        style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    );\n  }\n}\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getAllItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllItems, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim(' ');\r\n\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","// import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  // connect,\n  useSelector,\n  useDispatch,\n} from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from '../Loader';\n\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport {\n  getAllItems,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const allContacts = useSelector(getAllItems);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  // запись имени и номера телефона в стейт\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // добавлено для dispatch\n  const onSubmit = (name, number) => {\n    const duplicateContact = allContacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (duplicateContact) {\n      toast.warn(`${name} is already exist!`);\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n      toast.success(\n        `${name} successfully added to Phonebook!`,\n      );\n    }\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button\n        className={s.submitButton}\n        type=\"submit\"\n        // disabled={isLoading}\n      >\n        Add contact\n      </button>\n\n      {isLoading && <Loader />}\n    </form>\n  );\n}\n\n// ========== до использования useSelector и useDispatch ==========\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) =>\n//     dispatch(addContact(name, number)),\n// });\n\n// export default connect(\n//   null,\n//   mapDispatchToProps,\n// )(ContactForm);\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport {\n  // connect,\n  useSelector,\n  useDispatch,\n} from 'react-redux';\n\nimport Loader from '../Loader';\n\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getVisibleContacts,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getLoading);\n  const contacts = useSelector(getVisibleContacts);\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  // const onDelete = contactId =>\n  //   dispatch(deleteContact(contactId));\n\n  return (\n    <>\n      {contacts.length !== 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={s.contactItem} key={id}>\n              <p className={s.contactInfo}>\n                {name}: {number}\n              </p>\n              <button\n                className={s.deleteButton}\n                id={id}\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.notification}>\n          There are no contacts...\n        </p>\n      )}\n\n      {isLoading && <Loader />}\n    </>\n  );\n}\n\n// ========== до использования useSelector и useDispatch ==========\n// const getVisibleContacts = (items, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return items.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = state => {\n//   console.log(state);\n//   const { items, filter } = state.contacts;\n\n//   const visibleContacts = getVisibleContacts(items, filter);\n//   return { contacts: visibleContacts };\n// };\n//\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: id =>\n//     dispatch(ContactsOperations.deleteContact(id)),\n// });\n//\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps,\n// )(ContactList);\n//\n// ContactList.propTypes = {\n//   contacts: PropTypes.array.isRequired,\n//   onDelete: PropTypes.func.isRequired,\n// };\n","// import PropTypes from 'prop-types';\nimport {\n  // connect,\n  useSelector,\n  useDispatch,\n} from 'react-redux';\n\nimport Loader from '../Loader';\n\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const value = useSelector(getFilter);\n  const onChange = e =>\n    dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n\n// ========== до использования useSelector и useDispatch ==========\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: evt =>\n//     dispatch(changeFilter(evt.currentTarget.value)),\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps,\n// )(Filter);\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import s from './ContactsPage.module.css';\r\n\r\nimport ContactForm from '../../components/ContactForm';\r\nimport ContactList from '../../components/ContactList';\r\nimport Filter from '../../components/Filter';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nexport default function Phonebook() {\r\n  return (\r\n    <div className={s.app}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      <ToastContainer\r\n        autoClose={3000}\r\n        position=\"top-center\"\r\n        theme=\"colored\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport s from './App.module.css';\n\nimport AppBar from './components/AppBar';\nimport HomePage from './pages/HomePage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport ContactsPage from './pages/ContactsPage';\nimport { fetchCurrentUser } from './redux/auth/auth-operations';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchCurrentUser()), [dispatch]);\n\n  return (\n    <div className={s.app}>\n      <AppBar />\n\n      <Routes>\n        <Route\n          exact=\"true\"\n          path=\"/\"\n          element={<HomePage />}\n        />\n\n        <Route\n          path=\"/register\"\n          element={<RegisterPage />}\n        />\n\n        <Route path={'/login'} element={<LoginPage />} />\n\n        <Route\n          path=\"/contacts\"\n          element={<ContactsPage />}\n        />\n\n        <Route\n          path=\"*\"\n          element={<h1>Error 404: Page not found.</h1>}\n        />\n      </Routes>\n\n      <ToastContainer\n        autoClose={3000}\n        position=\"top-center\"\n        theme=\"colored\"\n      />\n    </div>\n  );\n}\n\n// const ContactsPage = lazy(() =>\n//   import(\n//     './pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */\n//   ),\n// );\n// const RegisterPage = lazy(() =>\n//   import(\n//     './pages/RegisterPage' /* webpackChunkName: \"register-page\" */\n//   ),\n// );\n// const LoginPage = lazy(() =>\n//   import(\n//     './pages/LoginPage' /* webpackChunkName: \"login-page\" */\n//   ),\n// );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1CLtc\",\"label\":\"ContactForm_label__rfloG\",\"input\":\"ContactForm_input__3Ms3S\",\"submitButton\":\"ContactForm_submitButton__2E8la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__HkvO3\",\"contactItem\":\"ContactList_contactItem__3xmnW\",\"contactInfo\":\"ContactList_contactInfo__3pGyM\",\"deleteButton\":\"ContactList_deleteButton__1bFhZ\",\"notification\":\"ContactList_notification__Bn3U8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AppBar_link__9A32T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ContactsPage_app__1VjiJ\",\"title\":\"ContactsPage_title__23vO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3m1Gi\",\"label\":\"Filter_label__2QEQi\",\"input\":\"Filter_input__2mjTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3z8sr\",\"title\":\"App_title__1ChaJ\"};"],"sourceRoot":""}